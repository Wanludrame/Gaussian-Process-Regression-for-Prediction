#############################################
## Gaussian Process Regression â€“ SE Kernel ##
#############################################
## Wanlu Shi ##
###############

####################
## Load Libraries ##
require(MASS)
require(plyr)
require(reshape2)
require(ggplot2)
####################

##################################################################################
## Calculate the Covariance Matrix Sigma Using the Squared Exponential Function ##
## Parameters: ##
## x1, x2: vectors ##
## l: the length-scale parameter ##
## Assume sigma_f^2 = 1 ##
## Returns: a covariance matrix ##
CovarianceMatrixSE <- function(x1, x2, l) {
  SEKernel <- matrix(rep(0, length(x1) * length(x2)), nrow = length(x1))
  for (i in 1:nrow(SEKernel)) {
    for (j in 1:ncol(SEKernel)) {
      SEKernel[i,j] <- exp(-0.5 * (abs(x1[i] - x2[j]) / l) ^ 2)
    }
  }
  return(SEKernel)
}
##################################################################################

###########################
## Plot Sample Functions ##
## Define the points at which we want to define the functions ##
x.star <- seq(-5, 5, len = 100)
x.star
###########################
PlotValuesSE <- function(l = 1, n = 5) {
  Sigma <- CovarianceMatrixSE(x.star, x.star, l)
  n.samples <- n
  values <- matrix(rep(0, length(x.star) * n.samples), ncol = n.samples)
  
  set.seed(12345)
  ## Set a seed for repeatable plots ##
  for (i in 1:n.samples) {
    ## Each column represents a sample from a multivariate normal distribution with mean zero and covariance Sigma ##
    values[, i] <- mvrnorm(1, rep(0, length(x.star)), Sigma)
  }
  
  values <- cbind(x = x.star, as.data.frame(values))
  values_melt <- melt(values, id = "x")
  
  ggplot(values_melt, aes(x = x, y = value)) +
    geom_point(aes(color = variable), size = 0.5) +
    theme_bw() +
    scale_y_continuous(lim = c(-2.5, 2.5), name = "output, f(x)") +
    xlab("input, x")
}
###########################
## Calculate the covariance matrix with l = 1 ##
PlotValuesSE(l = 1)
## Calculate the covariance matrix with l = 0.3 ##
PlotValuesSE(l = 0.3)
## Calculate the covariance matrix with l = 3 ##
PlotValuesSE(l = 3)
###########################